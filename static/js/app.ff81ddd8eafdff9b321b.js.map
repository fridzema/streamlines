{"version":3,"sources":["webpack:///../lib/createLookupGrid.js","webpack:///../lib/Vector.js","webpack:///../lib/renderTo.js","webpack:///./src/lib/appState.js","webpack:///../lib/streamLineIntegrator.js","webpack:///../index.js","webpack:///../lib/rk4.js","webpack:///../lib/classCheck.js","webpack:///./src/nativeMain.js"],"names":["classCallCheck","__webpack_require__","module","exports","bbox","dSep","bboxSize","Math","max","width","height","cellsCount","ceil","cells","occupyCoordinates","point","x","y","left","Error","top","assertInBounds","rowCoordinate","gridX","row","colCoordinate","gridY","cell","Cell","getCellByCoordinates","occupy","isTaken","checkCallback","cx","cy","col","currentCellX","cellRow","currentCellY","cellCol","isOutside","floor","this","children","prototype","push","i","length","p","dx","dy","sqrt","Vector","equals","other","add","mulScalar","scalar","normalize","l","distanceTo","canvas","ctx","getContext","a","b","config","beginPath","strokeStyle","transform","boundingBox","moveTo","lineTo","stroke","closePath","pt","tx","ty","streamline","defaultCode","fieldCode","code","error","isImmediate","setCode","newCode","immediate","newVectorField","compileVectorFieldFunction","streamLineGeneratorOptions","vectorField","redraw","dirty","seed","seedPoint","stepsPerIteration","timeStep","dTest","onPointAdded","lineColor","fillColor","window","addEventListener","lastStreamLineRenderer","appState","isDirty","init","c","getIntegrationProximity","setIntegrationProximity","newValue","ratio","getNumber","settingsPanel","dWarning","getFieldDensity","setFieldDensity","getLineColor","setLineColor","r","g","getFillColor","setFillColor","getStepsPerIteration","setStepsPerIteration","getIntegrationTimeStep","setIntegrationTimeStep","collapsed","moveBoundingBox","bounds","newLeft","minX","newTop","minY","newRight","maxX","newBottom","maxY","abs","random","str","defaultValue","parsed","Number","parseFloat","isNaN","innerWidth","innerHeight","clearRect","fillStyle","fillRect","dispose","run","render","getVelocity","Function","creator","e","message","rk4","createLookupGrid","FORWARD","BACKWARD","DONE","isSame","start","grid","points","pos","state","candidate","lastCheckedSeed","ownGrid","next","growForward","shouldPause","notifyPointAdded","growBackward","unshift","forEach","occupyPointInGrid","getStreamline","getNextValidSeed","v","normalizedVectorField","checkDSep","ox","oy","checkDTest","distanceToCandidate","velocity","growByVelocity","timeStepCheck","options","console","warn","requiredBoxMessage","assertNumber","size","normalizeBoundingBox","resolve","nextTimeout","STATE_INIT","finishedStreamlineIntegrators","streamlineIntegrator","createStreamlineIntegrator","disposed","running","setTimeout","nextStep","Promise","assignResolve","clearTimeout","pResolve","initProcessing","STATE_STREAMLINE","continueStreamline","STATE_PROCESS_QUEUE","processQueue","STATE_SEED_STREAMLINE","seedStreamline","STATE_DONE","streamLineCompleted","addStreamLineToQueue","currentStreamLine","validCandidate","shift","isDone","streamLinePoints","onStreamlineAdded","renderTo","msg","k1","k2","k3","k4","instance","Constructor","TypeError","document","getElementById","then","bind","catch","oe"],"mappings":"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","file":"static/js/app.ff81ddd8eafdff9b321b.js","sourcesContent":["var classCallCheck = require('./classCheck');\n\nmodule.exports = createLookupGrid;\n\nvar Cell = function () {\n  function Cell() {\n    classCallCheck(this, Cell);\n\n    this.children = null;\n  }\n\n  Cell.prototype.occupy = function occupy(point) {\n    if (!this.children) this.children = [];\n    this.children.push(point);\n  };\n\n  Cell.prototype.isTaken = function isTaken(x, y, checkCallback) {\n    if (!this.children) return false;\n\n    for (var i = 0; i < this.children.length; ++i) {\n      var p = this.children[i];\n      var dx = p.x - x,\n          dy = p.y - y;\n      var dist = Math.sqrt(dx * dx + dy * dy);\n      if (checkCallback(dist, p)) return true;\n    }\n\n    return false;\n  };\n\n  return Cell;\n}();\n\nfunction createLookupGrid(bbox, dSep) {\n  var bboxSize = Math.max(bbox.width, bbox.height);\n\n  var cellsCount = Math.ceil(bboxSize / dSep);\n\n  var cells = [];\n\n  var api = {\n    occupyCoordinates: occupyCoordinates,\n    isTaken: isTaken,\n    isOutside: isOutside\n  };\n\n  return api;\n\n  function isOutside(x, y) {\n    return x < bbox.left || x > bbox.left + bbox.width || \n           y < bbox.top || y > bbox.top + bbox.height;\n  }\n\n  function occupyCoordinates(point) {\n    var x = point.x, y = point.y;\n    getCellByCoordinates(x, y).occupy(point);\n  }\n\n  function isTaken(x, y, checkCallback) {\n    if (!cells) return false;\n\n    var cx = gridX(x);\n    var cy = gridY(y);\n    for (var col = -1; col < 2; ++col) {\n      var currentCellX = cx + col;\n      if (currentCellX < 0 || currentCellX >= cellsCount) continue;\n      \n      var cellRow = cells[currentCellX];\n      if (!cellRow) continue;\n\n      for (var row = -1; row < 2; ++row) {\n        var currentCellY = cy + row;\n        if (currentCellY < 0 || currentCellY >= cellsCount) continue;\n\n        var cellCol = cellRow[currentCellY];\n        if(!cellCol) continue;\n        if(cellCol.isTaken(x, y, checkCallback)) return true;\n      }\n    }\n\n    return false;\n  }\n\n  function getCellByCoordinates(x, y) {\n    assertInBounds(x, y);\n\n    var rowCoordinate = gridX(x);\n    var row = cells[rowCoordinate];\n    if (!row) {\n      row = cells[rowCoordinate] = [];\n    }\n    var colCoordinate = gridY(y);\n    var cell = row[colCoordinate];\n    if (!cell) {\n      cell = row[colCoordinate] = new Cell();\n    }\n    return cell;\n  }\n\n  function gridX(x) {\n    return Math.floor(cellsCount * (x - bbox.left)/bboxSize);\n  }\n\n  function gridY(y) {\n    return Math.floor(cellsCount * (y - bbox.top)/bboxSize);\n  }\n\n  function assertInBounds(x, y) {\n    if (bbox.left > x || bbox.left + bboxSize < x ) {\n      throw new Error('x is out of bounds');\n    }\n    if (bbox.top > y || bbox.top + bboxSize < y ) {\n      throw new Error('y is out of bounds');\n    }\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../lib/createLookupGrid.js\n// module id = 0EQ5\n// module chunks = 1","var classCallCheck = require('./classCheck');\n\nvar Vector = function () {\n  function Vector(x, y) {\n    classCallCheck(this, Vector);\n\n    this.x = x;\n    this.y = y;\n  }\n\n  Vector.prototype.equals = function equals(other) {\n    return this.x === other.x && this.y === other.y;\n  };\n\n  Vector.prototype.add = function add(other) {\n    return new Vector(this.x + other.x, this.y + other.y);\n  };\n\n  Vector.prototype.mulScalar = function mulScalar(scalar) {\n    return new Vector(this.x * scalar, this.y * scalar);\n  };\n\n  Vector.prototype.length = function length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  };\n\n  Vector.prototype.normalize = function normalize() {\n    var l = this.length();\n    this.x /= l;\n    this.y /= l;\n  };\n\n  Vector.prototype.distanceTo = function distanceTo(other) {\n    var dx = other.x - this.x;\n    var dy = other.y - this.y;\n\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n\n  return Vector;\n}();\n\nmodule.exports = Vector;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../lib/Vector.js\n// module id = 7PpZ\n// module chunks = 1","module.exports = renderTo;\n\nfunction renderTo(canvas) {\n  if (!canvas) throw new Error('Canvas is required');\n\n  var ctx = canvas.getContext('2d');\n  var width = canvas.width;\n  var height = canvas.height;\n\n  return onPointAdded;\n\n  function onPointAdded(a, b, config) {\n    ctx.beginPath();\n    ctx.strokeStyle = 'rgba(0, 0, 0, 0.6)';\n    a = transform(a, config.boundingBox);\n    b = transform(b, config.boundingBox);\n    ctx.moveTo(a.x, a.y);\n    ctx.lineTo(b.x, b.y);\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  function transform(pt, boundingBox) {\n    var tx = (pt.x - boundingBox.left)/boundingBox.width;\n    var ty = (pt.y - boundingBox.top)/boundingBox.height;\n    return {\n      x: tx * width,\n      y: (1 - ty) * height\n    }\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../lib/renderTo.js\n// module id = KCfz\n// module chunks = 1","var streamline = require('../../../index.js');\n\nvar defaultCode = `function getVelocity(p) {\n  var l = Math.sqrt(p.x * p.x + p.y * p.y);\n  return {\n    x: Math.cos(l),\n    y: Math.log(Math.abs(p.x))\n  };\n}`\n\nvar boundingBox = {left: -5, top: -5, width: 10, height: 10}\nvar fieldCode = {\n  code: defaultCode,\n  error: null,\n  isImmediate: false,\n  setCode(newCode, immediate) {\n    var newVectorField = compileVectorFieldFunction(newCode);\n    if (!newVectorField) return; // error\n    fieldCode.error = null;\n    fieldCode.code = newCode;\n    streamLineGeneratorOptions.vectorField = newVectorField;\n    if (immediate) {\n      redraw();\n    } else if (!fieldCode.immediate) {\n      dirty();\n    }\n    fieldCode.immediate = immediate;\n  }\n}\n\nvar streamLineGeneratorOptions = {\n  vectorField: null,\n  seed: seedPoint,\n  boundingBox,\n  stepsPerIteration: 15,\n  timeStep: 0.01,\n  dSep: 0.1,\n  dTest: 0.005,\n  onPointAdded,\n};\n\nvar lineColor = 'rgba(255, 255, 255, 0.6)';\nvar fillColor = 'rgba(27, 41, 74, 1.0)';\n\nwindow.addEventListener('resize', dirty);\n\nvar appState = {\n  isDirty: false,\n  init,\n  fieldCode,\n  redraw,\n\n  getIntegrationProximity() { return streamLineGeneratorOptions.dTest; },\n  setIntegrationProximity(newValue) { \n    var ratio = getNumber(newValue, streamLineGeneratorOptions.dTest);\n    if (ratio <= 0) ratio = 0.001;\n    if (ratio > 1) ratio = 1;\n    streamLineGeneratorOptions.dTest = newValue\n    validateDSepTest();\n    dirty();\n  },\n\n  getFieldDensity() { return streamLineGeneratorOptions.dSep; },\n  setFieldDensity(newValue) { \n    streamLineGeneratorOptions.dSep = getNumber(newValue, streamLineGeneratorOptions.dSep);\n    dirty();\n  },\n\n  getLineColor() { return lineColor },\n  setLineColor(r, g, b, a) { \n    lineColor = `rgba(${r}, ${g}, ${b}, ${a})`; \n    dirty();\n  },\n  getFillColor() { return fillColor; },\n  setFillColor(r, g, b, a) {\n    fillColor = `rgba(${r}, ${g}, ${b}, ${a})`; \n    dirty();\n  },\n  getStepsPerIteration() { return streamLineGeneratorOptions.stepsPerIteration; },\n  setStepsPerIteration(newValue) { \n    streamLineGeneratorOptions.stepsPerIteration = getNumber(newValue, streamLineGeneratorOptions.stepsPerIteration);\n    dirty();\n  },\n\n  getIntegrationTimeStep() { return streamLineGeneratorOptions.timeStep; },\n  setIntegrationTimeStep(newValue) { \n    streamLineGeneratorOptions.timeStep = getNumber(newValue, streamLineGeneratorOptions.timeStep);\n    dirty();\n  },\n  settingsPanel: {\n    collapsed: true\n  },\n  moveBoundingBox,\n  bounds: readBoundsFromBBox(boundingBox),\n}\n\nvar seedPoint = selectSeedPoint();\n\n\nmodule.exports = appState\n\nvar lastStreamLineRenderer;\nvar canvas, ctx, width, height;\n\nfunction init(c) {\n  canvas = c;\n  ctx = canvas.getContext('2d');\n  streamLineGeneratorOptions.vectorField = compileVectorFieldFunction(defaultCode);\n  redraw();\n}\n\nfunction readBoundsFromBBox(bbox) {\n  return {\n    minX: bbox.left,\n    minY: bbox.top,\n    maxX: bbox.left + bbox.width,\n    maxY: bbox.top + bbox.height,\n  }\n}\n\nfunction validateDSepTest() {\n  if (streamLineGeneratorOptions.dTest >= streamLineGeneratorOptions.dSep) {\n    appState.settingsPanel.dWarning = 'Stop distance should be smaller than line distance';\n  } else {\n    appState.settingsPanel.dWarning = '';\n  }\n}\n\nfunction selectSeedPoint() {\n  return {\n    x: boundingBox.left + Math.random() * boundingBox.width,\n    y: boundingBox.top + Math.random() * boundingBox.height\n  }\n}\nfunction moveBoundingBox(bounds) {\n  var newLeft = getNumber(bounds.minX, boundingBox.left);\n  var newTop = getNumber(bounds.minY, boundingBox.top);\n\n  var newRight = getNumber(bounds.maxX, newLeft + boundingBox.width);\n  var newBottom = getNumber(bounds.maxY, newTop + boundingBox.height);\n\n  boundingBox.left = newLeft;\n  boundingBox.top = newTop;\n  boundingBox.width = newRight - newLeft;\n  boundingBox.height =  Math.abs(newTop - newBottom);\n  dirty();\n}\n\nfunction getNumber(str, defaultValue) {\n  var parsed = Number.parseFloat(str);\n  if (Number.isNaN(parsed)) return defaultValue;\n  return parsed;\n}\n\nfunction redraw() {\n  appState.settingsPanel.isDirty = false;\n  width = window.innerWidth;\n  height = window.innerHeight;\n  canvas.width = width;\n  canvas.height = height;\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = fillColor;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  render();\n}\n\nfunction dirty() {\n  appState.settingsPanel.isDirty = true;\n}\n\nfunction render() {\n  if (lastStreamLineRenderer) {\n    lastStreamLineRenderer.dispose();\n    lastStreamLineRenderer = null;\n  }\n\n  lastStreamLineRenderer = streamline(streamLineGeneratorOptions)\n  lastStreamLineRenderer.run();\n}\n\nfunction onPointAdded(a, b) {\n  ctx.beginPath();\n  ctx.strokeStyle = lineColor;\n  a = transform(a);\n  b = transform(b);\n  ctx.moveTo(a.x, a.y);\n  ctx.lineTo(b.x, b.y);\n  ctx.stroke();\n  ctx.closePath();\n  return true;\n}\n\nfunction transform(pt) {\n  var tx = (pt.x - boundingBox.left)/boundingBox.width;\n  var ty = (pt.y - boundingBox.top)/boundingBox.height;\n  // var ar = width/height;\n  //tx /= ar;\n  return {\n    x: tx * width,\n    y: (1 - ty) * height\n  }\n}\n\nfunction compileVectorFieldFunction(code) {\n  try {\n    var creator = new Function(code + '\\nreturn getVelocity;');\n    var getVelocity = creator();\n    getVelocity(seedPoint); // just a test.\n    return getVelocity;\n  } catch (e) {\n    fieldCode.error = e.message;\n    return null;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/appState.js","var Vector = require('./Vector');\nvar rk4 = require('./rk4');\nvar createLookupGrid = require('./createLookupGrid');\n\nvar FORWARD = 1;\nvar BACKWARD = 2;\nvar DONE = 3;\n\nmodule.exports = createStreamlineIntegrator;\n\nfunction createStreamlineIntegrator(start, grid, config) {\n  var points = [start];\n  var pos = start;\n  var state = FORWARD;\n  var candidate = null;\n  var lastCheckedSeed = -1;\n  var ownGrid = createLookupGrid(config.boundingBox, config.timeStep * 0.9);\n\n  return {\n    start: start,\n    next: next,\n    getStreamline: getStreamline,\n    getNextValidSeed: getNextValidSeed\n  }\n\n  function getStreamline() {\n    return points;\n  }\n\n  function getNextValidSeed() {\n    while (lastCheckedSeed < points.length - 1) {\n      lastCheckedSeed += 1;\n\n      var p = points[lastCheckedSeed];\n      var v = normalizedVectorField(p);\n      if (!v) continue;\n      // Check one normal. We just set c = p + n, where n is orthogonal to v.\n      // Since v is unit vector we can multiply it by scaler (config.dSep) to get to the\n      // right point. It is also easy to find normal in 2d: normal to (x, y) is just (-y, x).\n      // You can get it by applying 2d rotation matrix.)\n      var cx = p.x - v.y * config.dSep;\n      var cy = p.y + v.x * config.dSep;\n\n      if (!grid.isOutside(cx, cy) && !grid.isTaken(cx, cy, checkDSep)) {\n        // this will let us check the other side. When we get back\n        // into this method, the point `cx, cy` will be taken (by construction of another streamline)\n        // And we will throw through to the next orthogonal check.\n        lastCheckedSeed -= 1; \n        return new Vector(cx, cy);\n      }\n\n      // Check orthogonal coordinates on the other side (o = p - n).\n      var ox = p.x + v.y * config.dSep;\n      var oy = p.y - v.x * config.dSep;\n      if (!grid.isOutside(ox, oy) && !grid.isTaken(ox, oy, checkDSep)) return new Vector(ox, oy);\n    }\n  }\n\n  function checkDTest(distanceToCandidate) {\n    if (isSame(distanceToCandidate, config.dTest)) return false;\n    return distanceToCandidate < config.dTest;\n  }\n\n  function checkDSep(distanceToCandidate) {\n    if (isSame(distanceToCandidate, config.dSep)) return false;\n\n    return distanceToCandidate < config.dSep;\n  }\n\n  function next() {\n    while(true) {\n      candidate = null;\n      if (state === FORWARD) {\n        var point = growForward();\n        if (point) {\n          points.push(point);\n          ownGrid.occupyCoordinates(point);\n          pos = point;\n          var shouldPause = notifyPointAdded(point);\n          if (shouldPause) return;\n        } else {\n          // Reset position to start, and grow backwards:\n          pos = start;\n          state = BACKWARD;\n        }\n      } \n      if (state === BACKWARD) {\n        var point = growBackward();\n        if (point) {\n          points.unshift(point);\n          pos = point;\n          ownGrid.occupyCoordinates(point);\n\n          var shouldPause = notifyPointAdded(point);\n          if (shouldPause) return;\n        } else {\n          state = DONE;\n        }\n      }\n\n      if (state === DONE) {\n        points.forEach(occupyPointInGrid);\n        return true;\n      }\n    }\n  }\n\n  function occupyPointInGrid(p) {\n    grid.occupyCoordinates(p);\n  }\n\n  function growForward() {\n    var velocity = rk4(pos, config.timeStep, normalizedVectorField);\n    if (!velocity) return; // Hit the singularity.\n\n    return growByVelocity(pos, velocity);\n  }\n\n  function growBackward() {\n    var velocity = rk4(pos, config.timeStep, normalizedVectorField);\n    if (!velocity) return; // Singularity\n    velocity = velocity.mulScalar(-1);\n\n    return growByVelocity(pos, velocity);\n  }\n\n  function growByVelocity(pos, velocity) {\n    candidate = pos.add(velocity);\n    if (grid.isOutside(candidate.x, candidate.y)) return;\n    if (grid.isTaken(candidate.x, candidate.y, checkDTest)) return;\n\n    // did we hit any of our points?\n    if(ownGrid.isTaken(candidate.x, candidate.y, timeStepCheck)) return;\n    // for (var i = 0; i < points.length; ++i) {\n    //   if (points[i].distanceTo(candidate) < config.timeStep * 0.9) return;\n    // }\n\n    return candidate;\n  }\n\n  function timeStepCheck(distanceToCandidate) {\n    return distanceToCandidate < config.timeStep * 0.9;\n  }\n\n  function notifyPointAdded(point) {\n    var shouldPause = false;\n    if (config.onPointAdded) {\n      shouldPause = config.onPointAdded(point, points[state === FORWARD ? points.length - 2 : 1], config);\n    } \n\n    return shouldPause;\n  }\n\n  function normalizedVectorField(p) {\n    var p = config.vectorField(p);\n    if (!p) return; // Assume singularity\n    if (Number.isNaN(p.x) || Number.isNaN(p.y)) return; // Not defined. e.g. Math.log(-1);\n\n    var l = p.x * p.x + p.y * p.y;\n\n    if (l === 0) return; // the same, singularity\n    l = Math.sqrt(l);\n\n    // We need normalized field.\n    return new Vector(p.x/l, p.y/l);\n  }\n}\n\nfunction isSame(a, b) {\n  // to avoid floating point error\n  return Math.abs(a - b) < 1e-4;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../lib/streamLineIntegrator.js\n// module id = R6aK\n// module chunks = 1","/**\n * Computes streamlines of a vector field based on http://web.cs.ucdavis.edu/~ma/SIGGRAPH02/course23/notes/papers/Jobard.pdf\n */\nmodule.exports = computeStreamlines;\nmodule.exports.renderTo = require('./lib/renderTo');\n\nvar Vector = require('./lib/Vector');\nvar createLookupGrid = require('./lib/createLookupGrid');\nvar createStreamlineIntegrator = require('./lib/streamLineIntegrator');\n\nvar STATE_INIT = 0;\nvar STATE_STREAMLINE = 1;\nvar STATE_PROCESS_QUEUE = 2;\nvar STATE_DONE = 3;\nvar STATE_SEED_STREAMLINE = 4;\n\nfunction computeStreamlines(options) {\n  if (!options) throw new Error('Configuration is required to compute streamlines');\n  if (!options.boundingBox) {\n    console.warn('No bounding box passed to streamline. Creating default one');\n    options.boundingBox = {left: -5, top: -5, width: 10, height: 10};\n  }\n  normalizeBoundingBox(options.boundingBox);\n\n  if (!options.seed) {\n    options.seed = new Vector(\n      Math.random() * options.boundingBox.width + options.boundingBox.left,\n      Math.random() * options.boundingBox.height + options.boundingBox.top\n    );\n  } else {\n    // This is not very polite to replace props for the consumers.\n    options.seed = new Vector(options.seed.x, options.seed.y);\n  }\n\n  var boundingBox = options.boundingBox\n\n  // Separation between streamlines. Naming according to the paper.\n  if (!(options.dSep > 0)) options.dSep = 1./Math.max(boundingBox.width, boundingBox.height);\n\n  // When should we stop integrating a streamline.\n  if (!(options.dTest > 0)) options.dTest = options.dSep * 0.5;\n\n  // Lookup grid helps to quickly tell if there are points nearby\n  var grid = createLookupGrid(boundingBox, options.dSep);\n\n  // Integration time step.\n  if (!(options.timeStep > 0)) options.timeStep = 0.01;\n\n  var stepsPerIteration = options.stepsPerIteration || 10;\n  var resolve;\n  var state = STATE_INIT;\n  var finishedStreamlineIntegrators = [];\n  var streamlineIntegrator = createStreamlineIntegrator(options.seed, grid, options);\n  var disposed = false;\n  var running = false;\n  var nextTimeout;\n  // It is asynchronous. If this is used in a browser we don't want to freeze the UI thread.\n  // On the other hand, if you need this to be sync - we can extend the API. Just let me know.\n\n  return {\n    run: run,\n    dispose: dispose\n  } \n\n  function run() {\n    if (running) return;\n    running = true;\n    nextTimeout = setTimeout(nextStep, 0);\n\n    return new Promise(assignResolve)\n  }\n\n  function assignResolve(pResolve) {\n    resolve = pResolve;\n  }\n\n  function dispose() {\n    disposed = true;\n    clearTimeout(nextTimeout);\n  }\n\n  function nextStep() {\n    if (disposed) return;\n\n    for (var i = 0; i < stepsPerIteration; ++i) {\n      if (state === STATE_INIT) initProcessing();\n      if (state === STATE_STREAMLINE) continueStreamline();\n      if (state === STATE_PROCESS_QUEUE) processQueue();\n      if (state === STATE_SEED_STREAMLINE) seedStreamline();\n\n      if (state === STATE_DONE) {\n        resolve(options);\n        return;\n      }\n    }\n\n    nextTimeout = setTimeout(nextStep, 0);\n  }\n\n  function initProcessing() {\n    var streamLineCompleted = streamlineIntegrator.next();\n    if (streamLineCompleted) {\n      addStreamLineToQueue();\n      state = STATE_PROCESS_QUEUE;\n    }\n  }\n\n  function seedStreamline() {\n    var currentStreamLine = finishedStreamlineIntegrators[0];\n\n    var validCandidate = currentStreamLine.getNextValidSeed();\n    if (validCandidate) {\n      streamlineIntegrator = createStreamlineIntegrator(validCandidate, grid, options);\n      state = STATE_STREAMLINE;\n    } else {\n      finishedStreamlineIntegrators.shift();\n      state = STATE_PROCESS_QUEUE;\n    }\n  }\n\n  function processQueue() {\n    if (finishedStreamlineIntegrators.length === 0) {\n      state = STATE_DONE;\n    } else {\n      state = STATE_SEED_STREAMLINE;\n    }\n  }\n\n  function continueStreamline() {\n    var isDone = streamlineIntegrator.next();\n    if (isDone) {\n      addStreamLineToQueue();\n      state = STATE_SEED_STREAMLINE;\n    }\n  }\n\n  function addStreamLineToQueue() {\n    var streamLinePoints = streamlineIntegrator.getStreamline();\n    if (streamLinePoints.length > 1) {\n      finishedStreamlineIntegrators.push(streamlineIntegrator);\n      if (options.onStreamlineAdded) options.onStreamlineAdded(streamLinePoints, options);\n    }\n  }\n}\n\nfunction normalizeBoundingBox(bbox) {\n  var requiredBoxMessage = 'Bounding box {left, top, width, height} is required';\n  if (!bbox) throw new Error(requiredBoxMessage);\n\n  assertNumber(bbox.left, requiredBoxMessage);\n  assertNumber(bbox.top, requiredBoxMessage);\n  if (typeof bbox.size === 'number') {\n    bbox.width = bbox.size;\n    bbox.height = bbox.size;\n  }\n  assertNumber(bbox.width, requiredBoxMessage);\n  assertNumber(bbox.height, requiredBoxMessage);\n\n  if (bbox.width <= 0 || bbox.height <= 0) throw new Error('Bounding box cannot be empty');\n}\n\nfunction assertNumber(x, msg) {\n  if (typeof x !== 'number') throw new Error(msg);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../index.js\n// module id = S3PC\n// module chunks = 1","/**\n * Performs Runge-Kutta 4th order integration.\n */\nmodule.exports = rk4;\n\nfunction rk4(point, timeStep, getVelocity) {\n  var k1 = getVelocity(point);\n  if (!k1) return;\n  var k2 = getVelocity(point.add(k1.mulScalar(timeStep * 0.5)));\n  if (!k2) return;\n  var k3 = getVelocity(point.add(k2.mulScalar(timeStep * 0.5)));\n  if (!k3) return;\n  var k4 = getVelocity(point.add(k3.mulScalar(timeStep)));\n  if (!k4) return;\n\n  var res = k1.mulScalar(timeStep / 6).add(k2.mulScalar(timeStep/3)).add(k3.mulScalar(timeStep/3)).add(k4.mulScalar(timeStep/6));\n  return res;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../lib/rk4.js\n// module id = Y/iN\n// module chunks = 1","module.exports = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n     throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../lib/classCheck.js\n// module id = v3xi\n// module chunks = 1","var appState = require('./lib/appState');\n\nvar canvas = document.getElementById('scene-canvas');\n// Canvas may not be available in test run\nif (canvas) appState.init(canvas);\n\n// Tell webpack to split bundle, and download settings UI later.\nrequire.ensure('@/main.js', () => {\n  // Settings UI is ready, initialize vue.js application\n  require('@/main.js');\n});\n\n\n// WEBPACK FOOTER //\n// ./src/nativeMain.js"],"sourceRoot":""}